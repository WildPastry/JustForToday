// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Calendar /> renders correctly 1`] = `
<View
  style={
    [
      {
        "backgroundColor": "#fff",
      },
      undefined,
    ]
  }
>
  <View
    style={
      [
        {
          "backgroundColor": "#fff",
        },
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "marginBottom": 30,
          },
          {
            "height": 35,
          },
        ],
      ]
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "justifyContent": "center",
          "width": "25%",
        }
      }
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "justifyContent": "center",
        }
      }
    >
      <Text
        style={
          [
            {
              "color": "#0074c1",
            },
            {
              "fontSize": 24,
              "lineHeight": 34,
            },
          ]
        }
      >
        Return to current day
      </Text>
    </View>
    <View
      style={
        [
          {
            "backgroundColor": "#fff",
          },
          {
            "justifyContent": "center",
            "width": "25%",
          },
        ]
      }
    />
  </View>
  <RCTScrollView
    style={
      [
        {
          "backgroundColor": "#fff",
        },
        undefined,
      ]
    }
  >
    <View />
  </RCTScrollView>
</View>
`;
